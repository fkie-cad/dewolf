extern unsigned long * stdout = 0UL;

struct _IO_FILE {
    int _flags;
    char * _IO_read_ptr;
    char * _IO_read_end;
    char * _IO_read_base;
    char * _IO_write_base;
    char * _IO_write_ptr;
    char * _IO_write_end;
    char * _IO_buf_base;
    char * _IO_buf_end;
    char * _IO_save_base;
    char * _IO_backup_base;
    char * _IO_save_end;
    _IO_marker * _markers;
    _IO_FILE * _chain;
    int _fileno;
    int _flags2;
    long _old_offset;
    unsigned short _cur_column;
    char _vtable_offset;
    char [1] _shortbuf;
    _IO_lock_t * _lock;
    long _offset;
    _IO_codecvt * _codecvt;
    _IO_wide_data * _wide_data;
    _IO_FILE * _freeres_list;
    void * _freeres_buf;
    unsigned long __pad5;
    int _mode;
    char [20] _unused2;
};
struct _IO_marker {
    void * _next;
    void * _sbuf;
    int _pos;
};
struct _IO_lock_t {
    int lock;
    int cnt;
    void * owner;
};
struct _IO_codecvt {
    _IO_iconv_t __cd_in;
    _IO_iconv_t __cd_out;
};
struct _IO_iconv_t {
    __gconv_step * step;
    __gconv_step_data step_data;
};
struct __gconv_step {
    void * __shlib_handle;
    char * __modname;
    int __counter;
    char * __from_name;
    char * __to_name;
    void __fct;
    unsigned int(void *, unsigned char) * __btowc_fct;
    int(void *) * __init_fct;
    void(void *) * __end_fct;
    int __min_needed_from;
    int __max_needed_from;
    int __min_needed_to;
    int __max_needed_to;
    int __stateful;
    void * __data;
};
struct __gconv_step_data {
    unsigned char * __outbuf;
    unsigned char * __outbufend;
    int __flags;
    int __invocation_counter;
    int __internal_use;
    __mbstate_t * __statep;
    __mbstate_t __state;
};
struct __mbstate_t {
    int __count;
    union __value {
        unsigned int __wch;
        char [4] __wchb;
    };
};
union __value {
    unsigned int __wch;
    char [4] __wchb;
};
struct _IO_wide_data {
    int * _IO_read_ptr;
    int * _IO_read_end;
    int * _IO_read_base;
    int * _IO_write_base;
    int * _IO_write_ptr;
    int * _IO_write_end;
    int * _IO_buf_base;
    int * _IO_buf_end;
    int * _IO_save_base;
    int * _IO_backup_base;
    int * _IO_save_end;
    __mbstate_t _IO_state;
    __mbstate_t _IO_last_state;
    _IO_codecvt _codecvt;
    int [1] _shortbuf;
    void * _wide_vtable;
};

long perform_basename(char * arg1, char * arg2, char arg3) {
    int var_3;
    void * var_4;
    unsigned long * var_2;
    char * var_0;
    arg1 = base_name(arg1);
    strip_trailing_slashes(arg1);
    if ((*arg1 != '/') && (arg2 != 0L)) {
        var_4 = arg1 + strlen(arg1);
        var_0 = strlen(arg2) + arg2;
        while (arg1 < var_4) {
            if (arg2 >= var_0) {
                if (arg1 >= var_4) {
                    break;
                }
                *var_4 = 0x0;
                break;
            }
            var_4--;
            var_0--;
            if (*var_4 != *var_0) {
                break;
            }
        }
    }
    var_2 = stdout;
    var_3 = fputs_unlocked(/* str */ arg1, /* fp */ var_2);
    var_2 = stdout;
    var_4 = stdout + 40L;
    arg2 = *var_4;
    var_3 = var_3 - var_3 + (arg3 < 1) & 10;
    if (arg2 < *(stdout + 48L)) {
        *var_4 = arg2 + 1L;
        *arg2 = var_3;
    }
    else {
        __overflow(/* f */ var_2, /* ch */ var_3);
    }
    return free(/* mem */ arg1);
}
2.084719399921596